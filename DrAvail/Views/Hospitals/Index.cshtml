@model DrAvail.Services.PaginatedList<DrAvail.Models.Hospital>

@{
    ViewData["Title"] = "Hospitals";
}


@if (Model.Any())
{
    <h4>Hospitals</h4>

    if (User.IsInRole(Constants.AdministratorsRole))
    {
        <p>
            <a asp-action="Create">Create New</a>
        </p>
    }
    else
    {
        <p> </p>
    }

    <form asp-action="Index" method="get">
        <div class="form-actions no-color form-inline">
            <p>
                Find by name: <input class="form-control" style="width:35%" type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
                <input type="submit" value="Search" class="btn btn-info" /> |
                <a asp-action="Index">Back to Full List</a>
            </p>
        </div>
    </form>

    @foreach (var item in Model)
    {
        <div class="card text-dark bg-light mb-3" style="border-radius:20px;width:75%">
            <div class="row">
                <img class="img-fluid col-sm-3 p-0" style="border-bottom-left-radius:20px;border-top-left-radius:20px;object-fit:cover" src="/Images/logo.png" alt="...">
                    <div class="card-body">
                        <div class="col-md-7 float-left">
                            <h5 class="card-title">
                                <a asp-action="Details" asp-route-id="@item.ID">@Html.DisplayFor(modelItem => item.Name)</a>
                            </h5>
                            <p class="card-text">@Html.DisplayFor(modelItem => item.Type)</p>
                            <p class="card-text text-muted">
                                @Html.DisplayFor(modelItem => item.Address)
                            </p>
                            <p class="card-text">
                                @Html.DisplayFor(modelItem => item.City), @Html.DisplayFor(modelItem => item.District)
                            </p>
                            <br />
                            @if (item.Doctors.Any())
                            {
                                <p> Doctors(@item.Doctors.Count)</p>
                            }
                        </div>
                        <div class="col-md-2 d-flex flex-column btn-toolbar align-items-center">
                            <div class="btn-group-vertical" role="group" aria-label="action button group">
                                @if ((await AuthorizationService.AuthorizeAsync(User, item, Operations.Update)).Succeeded)
                                {
                                    <a class="btn btn-outline-danger m-1 rounded" asp-action="Edit" asp-route-id="@item.ID">Edit</a>
                                }
                                <a class="btn btn-outline-info m-1 box-shadow" asp-action="Details" asp-route-id="@item.ID">Details</a>
                            </div>
                        </div>
                    </div>

            </div>
        </div>
    }

    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";

    <a asp-action="Index"
       asp-route-pageIndex="@(Model.PageIndex - 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-default @prevDisabled">
        Previous
    </a>
    <a asp-action="Index"
       asp-route-pageIndex="@(Model.PageIndex + 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-default @nextDisabled">
        Next
    </a>
}
else
{
    <div class="jumbotron jumbotron-fluid">
        <div class="container">
            <h6 class="display-4">No Hospital/Clinic registered.</h6>
            Want to register your hospital/clinic? Please click
            <a asp-action="Create">here</a>.
        </div>
    </div>
}